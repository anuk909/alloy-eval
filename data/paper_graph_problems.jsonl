{"task_id": "DAG", "prompt": "Directed acyclic graph", "signatures": "sig Node {\n\tlink : set Node\n}", "predicate_definition": "pred DAG {\n", "canonical_solution": "\tall n: Node | n !in n.^ link\n}", "check": "check DAG {\n    DAG iff (all n: Node | n !in n.^ link)\n} for 4"}
{"task_id": "Cycle", "prompt": "Graph with directed cycle", "signatures": "sig Node {\n\tlink : set Node\n}", "predicate_definition": "pred Cycle {\n", "canonical_solution": "\tsome n: Node | n in n.^ link\n}", "check": "check Cycle {\n    Cycle iff (some n: Node | n in n.^ link)\n} for 4"}
{"task_id": "Circular", "prompt": "The number of nodes is equal to the number of edges and the graph has a directed cycle that visits all nodes", "signatures": "sig Node {\n\tlink : set Node\n}", "predicate_definition": "pred Circular {\n", "canonical_solution": "\t#Node = #link and all n: Node | one n.link and all m, n: Node | m in n.^link\n}", "check": "check Circular {\n    Circular iff (#Node = #link and all n: Node | one n.link and all m, n: Node | m in n.^link)\n} for 4"}