{"task_id": "Connex", "prompt": "For every pair of elements in S, either the first is related to the second or vice versa", "signatures": "sig S { r: set S }", "predicate_definition": "pred Connex {\n", "canonical_solution": "\tall s, t: S | s->t in r or t->s in r\n}", "check": "check Connex {\n    Connex iff (all s, t: S | s->t in r or t->s in r)\n} for 4"}
{"task_id": "Reflexive", "prompt": "Every element in S is related to itself", "signatures": "sig S { r: set S }", "predicate_definition": "pred Reflexive {\n", "canonical_solution": "\tall s: S | s->s in r\n}", "check": "check Reflexive {\n    Reflexive iff (all s: S | s->s in r)\n} for 4"}
{"task_id": "Symmetric", "prompt": "If element x in S is related to y, then y is also related to x", "signatures": "sig S { r: set S }", "predicate_definition": "pred Symmetric {\n", "canonical_solution": "\tall s, t: S | s->t in r implies t->s in r\n}", "check": "check Symmetric {\n    Symmetric iff (all s, t: S | s->t in r implies t->s in r)\n} for 4"}
{"task_id": "Transitive", "prompt": "If element x in S is related to y and y is related to z, then x is also related to z", "signatures": "sig S { r: set S }", "predicate_definition": "pred Transitive {\n", "canonical_solution": "\tall s, t, u: S | s->t in r and t->u in r implies s->u in r\n}", "check": "check Transitive {\n    Transitive iff (all s, t, u: S | s->t in r and t->u in r implies s->u in r)\n} for 4"}
{"task_id": "Antisymmetric", "prompt": "If element x in S is related to y and y is related to x, then x and y are the same element", "signatures": "sig S { r: set S }", "predicate_definition": "pred Antisymmetric {\n", "canonical_solution": "\tall s, t: S | s->t in r and t->s in r implies s = t\n}", "check": "check Antisymmetric {\n    Antisymmetric iff (all s, t: S | s->t in r and t->s in r implies s = t)\n} for 4"}
{"task_id": "Irreflexive", "prompt": "No element in S is related to itself", "signatures": "sig S { r: set S }", "predicate_definition": "pred Irreflexive {\n", "canonical_solution": "\tall s, t: S | s->t in r implies s != t\n}", "check": "check Irreflexive {\n    Irreflexive iff (all s, t: S | s->t in r implies s != t)\n} for 4"}
{"task_id": "Functional", "prompt": "Every element in S is related to at most one element (making r a partial function)", "signatures": "sig S { r: set S }", "predicate_definition": "pred Functional {\n", "canonical_solution": "\tall s: S | lone s.r\n}", "check": "check Functional {\n    Functional iff (all s: S | lone s.r)\n} for 4"}
{"task_id": "Function", "prompt": "Every element in S is related to exactly one element (making r a total function)", "signatures": "sig S { r: set S }", "predicate_definition": "pred Function {\n", "canonical_solution": "\tall s: S | one s.r\n}", "check": "check Function {\n    Function iff (all s: S | one s.r)\n} for 4"}